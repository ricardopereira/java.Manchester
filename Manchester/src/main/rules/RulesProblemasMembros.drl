package RuleProblemasMembros

import pt.manchester.ui.text.*;
import pt.manchester.logic.*;
import pt.manchester.logic.Areas.*;

rule "Rule ProblemasMembros - Inicial/Vermelho"
salience 100
    when
        area : AreaProblemasMembros(escalaActual == EscalaTriagem.etSemEscala);
    then
        Comandos comandos = new Comandos(area);
        int opcao = comandos.showOpcoes();
        int opcaoNenhum = comandos.getOpcoesCount();

		if (opcao == opcaoNenhum)
		{
            area.setEscalaActual(EscalaTriagem.etLaranja);
            update(area);
        }
		else
		{
            area.setEscalaActual(EscalaTriagem.etVermelho);
            insert(new Resultado(area));
            retract(area);
        }
end

rule "Rule ProblemasMembros - Laranja"
salience 75
    when
        area : AreaProblemasMembros(escalaActual == EscalaTriagem.etLaranja);
    then
        Comandos comandos = new Comandos(area);
        int opcao = comandos.showOpcoes();
        int opcaoNenhum = comandos.getOpcoesCount();

        if (opcao == opcaoNenhum)
        {
            area.setEscalaActual(EscalaTriagem.etAmarelo);
            update(area);
        }
        else
        {
            insert(new Resultado(area));
            retract(area);
        }
end

rule "Rule ProblemasMembros - Amarelo"
salience 50
    when
        area : AreaProblemasMembros(escalaActual == EscalaTriagem.etAmarelo);
    then
        Comandos comandos = new Comandos(area);
        int opcao = comandos.showOpcoes();
        int opcaoNenhum = comandos.getOpcoesCount();

        if (opcao == opcaoNenhum)
        {
            area.setEscalaActual(EscalaTriagem.etVerde);
            update(area);
        }
        else
        {
            insert(new Resultado(area));
            retract(area);
        }
end

rule "Rule ProblemasMembros - Verde"
salience 25
    when
        area : AreaProblemasMembros(escalaActual == EscalaTriagem.etVerde);
    then
	    insert(new Resultado(area));
	    retract(area);
end
